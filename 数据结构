数据结构
1.线性表
  1.线性表本身（数组类型）
  2.普通链表
  3.静态链表 ！！
  （相当于用数组来实现链表的功能，数组第一个放备用链表的第一个节点的下标，然后数组乘员有上标志，指向下一个数在数组中的地址）
  （最后一个数用来存放插入的新节点）
  4.循环链表 
  5.双向链表
2.栈与队列
  1.栈的基本操作
  2.栈的递归应用
  3.队列
  4.循环队列
  5.队列的链表形式
3.串
  1.存储结构
    1.定长顺序存储（和数组类似）
    2.堆分配
    3.块链表表示
    （可以多个字符串存一个，也可以单一存储）
  2.串的模式匹配
    1.简单的模式匹配算法
    2.KMP算法 ！！
4.树
  1.定义
  2.树的存储方法
    1.双亲表示
    2.孩子兄弟表示
    3.孩子表示
  3.二叉树定义和性质 
  4.二叉树遍历
    1.先序遍历
    2.中序遍历
    3.后续遍历
    4.深度遍历
    5.层次遍历
  5.线索二叉树 ！！
  6.二叉树与森林的转换
  7.赫夫曼树 ！！
  （现频率高的字符编码短一些赫曼编码树是⼀颗二叉树
    每片叶子结点都包含⼀个字符
    从结点到其左孩子的路径上标记0
    从结点到其右孩子的路径上标记1  根据权重进行组成树）
  （左子树小于右子树，从根节点到最下面的叶子节点的路径可以表示出编码数）
5.图
  1.定义
  2.存储方法
    1.邻接矩阵
    2.邻接表（链表）
    3.十字链表 ！！（有向图）
    （两个数组组成  1.是data firstin firstout   2.是 tailvex headvex headlink taillink）
    （tailvex headvex headlink taillink 中的 1 和 2 是从1指向2 的两个节点）
    （data firstin firstout 中firstout指向以该节点开头的tailvex headvex headlink taillink）
    （data firstin firstout 中firstin指向被指向的tailvex headvex headlink taillink）
    4.邻接多重表 ！！（无向图）
    （两个数组表示  1.是data firstedge  2.是 ivex ilink jvex jlink）
    （ivex ilink jvex jlink中只有1和3是下表，其余的指向其他ivex ilink jvex jlink的指针）
    （ivex ilink是一个组  jvex jlink是一个组）
    （节点的data firstedge指向对应的 ivex ilink jvex jlink  然后ilink去指向对应的ivex ilink jvex jlink）
    5.边集数组 ！！
    （按照边的权重来进行排序）
  3.图的遍历
    1.深度优先遍历
    2.广度优先遍历
  4.最小生成树
    1.普利姆算法
    （一般以V0为起始点，一次按照该点权重最小的路径进行连接，不能有回环）
    2.克鲁斯卡尔算法
    （以边的权重进行生成，从最小的开始依次连接，不要形成回环）
  5.最短路径
    1.迪杰斯特拉算法
    （更新路径）
    2.佛洛依德算法
    （更新矩阵）
  6.拓扑排序
  7.关键路径
    （拓扑排序和逆拓扑排序相同的节点的组成的路径就是关键路径）
